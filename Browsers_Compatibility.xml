<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="2" hostname="DESKTOP-VQ6UTO1" failures="0" tests="4" name="Browsers_Compatibility" time="0.049" errors="0" timestamp="2025-04-26T12:51:07 IST">
  <testcase classname="base.BaseTest" name="@BeforeMethod setUp" time="0.015">
    <failure type="org.openqa.selenium.remote.NoSuchDriverException" message="Unable to obtain: geckodriver, error geckodriver must exist: drivers\geckodriver.exe
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: &amp;apos;4.28.1&amp;apos;, revision: &amp;apos;73f5ad48a2&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;21.0.5&amp;apos;
Driver info: driver.version: FirefoxDriver">
      <![CDATA[org.openqa.selenium.remote.NoSuchDriverException: Unable to obtain: geckodriver, error geckodriver must exist: drivers\geckodriver.exe
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.28.1', revision: '73f5ad48a2'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: driver.version: FirefoxDriver
at org.openqa.selenium.remote.service.DriverFinder.getBinaryPaths(DriverFinder.java:121)
at org.openqa.selenium.remote.service.DriverFinder.getDriverPath(DriverFinder.java:55)
at org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:132)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:127)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:112)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:102)
at base.BaseTest.setUp(BaseTest.java:67)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.IllegalStateException: geckodriver must exist: drivers\geckodriver.exe
at org.openqa.selenium.internal.Require$PathStateChecker.isExecutable(Require.java:475)
at org.openqa.selenium.remote.service.DriverFinder.getBinaryPaths(DriverFinder.java:118)
... 24 more
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.BaseTest" name="@BeforeMethod setUp" time="0.014">
    <failure type="org.openqa.selenium.remote.NoSuchDriverException" message="Unable to obtain: geckodriver, error geckodriver must exist: drivers\geckodriver.exe
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: &amp;apos;4.28.1&amp;apos;, revision: &amp;apos;73f5ad48a2&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;21.0.5&amp;apos;
Driver info: driver.version: FirefoxDriver">
      <![CDATA[org.openqa.selenium.remote.NoSuchDriverException: Unable to obtain: geckodriver, error geckodriver must exist: drivers\geckodriver.exe
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/
Build info: version: '4.28.1', revision: '73f5ad48a2'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: driver.version: FirefoxDriver
at org.openqa.selenium.remote.service.DriverFinder.getBinaryPaths(DriverFinder.java:121)
at org.openqa.selenium.remote.service.DriverFinder.getDriverPath(DriverFinder.java:55)
at org.openqa.selenium.firefox.FirefoxDriver.generateExecutor(FirefoxDriver.java:141)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:132)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:127)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:112)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:102)
at base.BaseTest.setUp(BaseTest.java:67)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.lang.IllegalStateException: geckodriver must exist: drivers\geckodriver.exe
at org.openqa.selenium.internal.Require$PathStateChecker.isExecutable(Require.java:475)
at org.openqa.selenium.remote.service.DriverFinder.getBinaryPaths(DriverFinder.java:118)
... 24 more
... Removed 14 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="base.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="base.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="base.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="tests.ProductSearchTest" name="testPriceFilter" time="0.0">
    <skipped/>
  </testcase> <!-- testPriceFilter -->
  <testcase classname="tests.LoginTest" name="testValidLogin" time="0.0">
    <skipped/>
  </testcase> <!-- testValidLogin -->
  <testcase classname="tests.ProductSearchTest" name="testSortProducts" time="0.0">
    <skipped/>
  </testcase> <!-- testSortProducts -->
  <testcase classname="tests.LoginTest" name="testInvalidLogin" time="0.0">
    <skipped/>
  </testcase> <!-- testInvalidLogin -->
  <testcase classname="base.BaseTest" name="@AfterSuite tearDownSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownSuite -->
  <testcase classname="base.BaseTest" name="@BeforeSuite setUpSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUpSuite -->
</testsuite> <!-- Browsers_Compatibility -->
